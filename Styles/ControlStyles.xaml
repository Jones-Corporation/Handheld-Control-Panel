<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                          xmlns:ui="http://schemas.modernwpf.com/2019"
                    >
    <!--split view-->
    <Style x:Key="splitViewButton" TargetType="Button" >
        <Setter Property="Width" Value="42" />
        
    </Style>
    <!--buttons-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
           
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>

            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">

                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>

            </Trigger>
        </Style.Triggers>
    </Style>


    <!--icons-->
    <Style x:Key="userControlIconMaterial" TargetType="icon:PackIconMaterial">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    <Style x:Key="userControlIconFontAwesome" TargetType="icon:PackIconFontAwesome">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Margin" Value="0,0,5,0" />

    </Style>
    <Style x:Key="userControlIconUnicons" TargetType="icon:PackIconUnicons">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Margin" Value="0,0,5,0" />

    </Style>

    <!--stack panel-->

    <Style x:Key="pageStackPanel" TargetType="StackPanel">
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>

    </Style>

    <!--textblocks-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--labels-->
    <Style x:Key="headerLabel" TargetType="Label">
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="20,0,0,0" />

    </Style>

    <Style x:Key="userControlMainLabel" TargetType="Label">
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="24" />
    </Style>
    <Style x:Key="userControlSubLabel" TargetType="Label">
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="24" />
    </Style>
    <Style x:Key="userControlUnitLabel" TargetType="Label">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20" />
    </Style>

<!--rectangles-->
    <Style x:Key="rectangle" TargetType="Rectangle" >
        <Setter Property="Height" Value="1" />
        <Setter Property="Fill" Value="Black" />
        <Setter Property="Margin" Value="20,0,20,0" />
    </Style>
    
    <!--borders-->
    <Style x:Key="userControlBorder" TargetType="Border">
        <Setter Property="Margin" Value="18,3,18,3" />
        <Setter Property="BorderThickness" Value="0,2,2,2" />
        <Setter Property="CornerRadius" Value="7" />
    </Style>
    <Style x:Key="userControlLeftBorder" TargetType="Border">
 
        <Setter Property="BorderThickness" Value="2,0,0,0" />
        <Setter Property="CornerRadius" Value="7" />
    </Style>
    
    <!--navigationview-->
    <Style x:Key="navigationView" TargetType="ui:NavigationView" >
        <Setter Property="IsPaneOpen" Value="False" />
        <Setter Property="PaneDisplayMode" Value="LeftCompact" />
        <Setter Property="IsBackEnabled" Value="False" />
        <Setter Property="IsBackButtonVisible" Value="Collapsed" />
        <Setter Property="IsSettingsVisible" Value="False" />
    </Style>
</ResourceDictionary>